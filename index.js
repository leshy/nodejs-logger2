// Generated by CoffeeScript 1.8.0
(function() {
  var Backbone, Console, Logger, Udp, UdpGun, colors, fs, helpers, os, settings, subscriptionMan, v, validator, _,
    __slice = [].slice;

  _ = require('underscore');

  Backbone = require('backbone4000');

  helpers = require('helpers');

  subscriptionMan = require('subscriptionman2');

  validator = require('validator2-extras');

  v = validator.v;

  colors = require('colors');

  UdpGun = require('udp-client');

  os = require('os');

  fs = require('fs');

  settings = {
    logstash: {
      host: 'localhost',
      port: "6000",
      extendPacket: {
        type: 'log',
        host: os.hostname()
      }
    }
  };

  Logger = exports.Logger = subscriptionMan.basic.extend4000({
    initialize: function() {
      this.outputs = new Backbone.Collection();
      return this.subscribe(true, (function(_this) {
        return function(event) {
          return _this.outputs.each(function(output) {
            return output.log(event);
          });
        };
      })(this));
    },
    log: function() {
      var data, logEntry, msg, tags;
      msg = arguments[0], data = arguments[1], tags = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      if (data == null) {
        data = {};
      }
      logEntry = _.extend({}, {
        tags: tags,
        msg: msg
      }, data);
      return this.event(logEntry);
    }
  });

  Console = exports.Console = Backbone.Model.extend4000({
    name: 'console',
    initialize: function() {
      return this.startTime = new Date().getTime();
    },
    log: function(logEvent) {
      return console.log(colors.green(new Date().getTime() - this.startTime) + "\t" + colors.yellow(new Date()) + " " + colors.green(logEvent.tags.join(', ')) + " " + logEvent.msg);
    }
  });

  Udp = exports.Udp = Backbone.Model.extend4000({
    name: 'udp',
    initialize: function(settings) {
      if (settings == null) {
        settings = {
          host: 'localhost',
          port: 6000
        };
      }
      return this.gun = new UdpGun(settings.port, settings.host);
    },
    log: function(logEvent) {
      return this.gun.send(new Buffer(JSON.stringify(_.extend({}, settings.extendPacket || {
        type: 'node'
      }, logEvent))));
    }
  });

}).call(this);
